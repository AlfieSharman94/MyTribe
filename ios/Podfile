require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, min_ios_version_supported
prepare_react_native_project!

# Enable frameworks with static linkage
use_frameworks! :linkage => :static

# This helps with Firebase
$RNFirebaseAsStaticFramework = true

# Disable Flipper since it's causing issues with frameworks
flipper_config = FlipperConfiguration.disabled

target 'MyTribe' do
  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => flags[:hermes_enabled],
    :fabric_enabled => flags[:fabric_enabled],
    :flipper_configuration => flipper_config,
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # Workaround for gRPC modulemap issue
  pod 'gRPC-C++', :modular_headers => false
  pod 'gRPC-Core', :modular_headers => false
   
  # Firebase pods with modular headers enabled
  pod 'FirebaseAuth', :modular_headers => true
  pod 'FirebaseCore', :modular_headers => true
  pod 'FirebaseCoreExtension', :modular_headers => true
  pod 'FirebaseCoreInternal', :modular_headers => true
  pod 'FirebaseFirestore', :modular_headers => true
  pod 'FirebaseFirestoreInternal', :modular_headers => true
  pod 'FirebaseAppCheckInterop', :modular_headers => true
  pod 'FirebaseAuthInterop', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true
  pod 'RecaptchaInterop', :modular_headers => true

  target 'MyTribeTests' do
    inherit! :complete
  end

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )

    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
        
        # For Apple Silicon support
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
      end
    end

    # Xcode 14 build settings
    installer.pods_project.build_configurations.each do |config|
      config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      
      # Add React Native header search paths
      config.build_settings['HEADER_SEARCH_PATHS'] ||= '$(inherited)'
      config.build_settings['HEADER_SEARCH_PATHS'] << ' ${PODS_ROOT}/Headers/Public/React-Core'
      config.build_settings['HEADER_SEARCH_PATHS'] << ' ${PODS_ROOT}/Headers/Public/React-RCTAppDelegate'
    end

    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # For M1 compatibility
        config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
        
        # Additional settings
        if target.name == "React-Core.common-AccessibilityResources"
          config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
        end
        
        if target.name == 'RNScreens'
          config.build_settings['OTHER_LDFLAGS'] ||= '$(inherited)'
          config.build_settings['OTHER_LDFLAGS'] << ' -framework React-RCTImage'
          config.build_settings['FRAMEWORK_SEARCH_PATHS'] ||= '$(inherited)'
          config.build_settings['FRAMEWORK_SEARCH_PATHS'] << '${PODS_ROOT}/../../node_modules/react-native/Libraries/Image'
          config.build_settings['HEADER_SEARCH_PATHS'] ||= '$(inherited)'
          config.build_settings['HEADER_SEARCH_PATHS'] << '${PODS_ROOT}/../../node_modules/react-native/Libraries/Image'
        end

        # Firebase specific settings
        if target.name.start_with?('RNFB') || target.name.start_with?('Firebase')
          # Enable modules
          config.build_settings['DEFINES_MODULE'] = 'YES'
          config.build_settings['CLANG_ENABLE_MODULES'] = 'YES'
          
          # Swift settings
          config.build_settings['SWIFT_VERSION'] = '5.0'
          config.build_settings['SWIFT_OBJC_BRIDGING_HEADER'] = ''
          config.build_settings['SWIFT_OBJC_INTERFACE_HEADER_NAME'] = '$(PRODUCT_MODULE_NAME)-Swift.h'
          
          # Search paths
          config.build_settings['HEADER_SEARCH_PATHS'] ||= '$(inherited)'
          config.build_settings['HEADER_SEARCH_PATHS'] << ' ${PODS_ROOT}/FirebaseAuth'
          config.build_settings['HEADER_SEARCH_PATHS'] << ' ${PODS_ROOT}/FirebaseAuth/Sources'
          config.build_settings['HEADER_SEARCH_PATHS'] << ' ${PODS_ROOT}/FirebaseAuth/Sources/Public'
          
          config.build_settings['FRAMEWORK_SEARCH_PATHS'] ||= '$(inherited)'
          config.build_settings['FRAMEWORK_SEARCH_PATHS'] << ' ${PODS_ROOT}/FirebaseAuth'
          
          # Clear OTHER_LDFLAGS to prevent circular dependencies
          config.build_settings['OTHER_LDFLAGS'] = '$(inherited)'
          
          # Additional settings for RNFB targets
          if target.name.start_with?('RNFB')
            config.build_settings['SWIFT_INCLUDE_PATHS'] ||= '$(inherited)'
            config.build_settings['SWIFT_INCLUDE_PATHS'] << ' ${PODS_ROOT}/FirebaseAuth'
            config.build_settings['SWIFT_INCLUDE_PATHS'] << ' ${PODS_ROOT}/FirebaseAuth/Sources'
            config.build_settings['SWIFT_INCLUDE_PATHS'] << ' ${PODS_ROOT}/FirebaseAuth/Sources/Public'
          end
        end
      end
    end
  end
end

