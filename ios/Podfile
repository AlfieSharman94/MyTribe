# Add this at the top of your Podfile
require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported
install! 'cocoapods', :deterministic_uuids => false
prepare_react_native_project!

# Add this line to fix the Swift module issue
use_modular_headers!

# If you're using a CDN with Flipper, specify that here
# use_flipper!()

target 'MyTribe' do
  config = use_native_modules!

  # Explicitly include all React Native dependencies
  pod 'React', :path => '../node_modules/react-native/'
  pod 'React-Core', :path => '../node_modules/react-native/'
  pod 'React-CoreModules', :path => '../node_modules/react-native/React/CoreModules'
  pod 'React-RCTActionSheet', :path => '../node_modules/react-native/Libraries/ActionSheetIOS'
  pod 'React-RCTAnimation', :path => '../node_modules/react-native/Libraries/NativeAnimation'
  pod 'React-RCTBlob', :path => '../node_modules/react-native/Libraries/Blob'
  pod 'React-RCTImage', :path => '../node_modules/react-native/Libraries/Image'
  pod 'React-RCTLinking', :path => '../node_modules/react-native/Libraries/LinkingIOS'
  pod 'React-RCTNetwork', :path => '../node_modules/react-native/Libraries/Network'
  pod 'React-RCTSettings', :path => '../node_modules/react-native/Libraries/Settings'
  pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text'
  pod 'React-RCTVibration', :path => '../node_modules/react-native/Libraries/Vibration'
  
  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => false
  )

  # Firebase pods - use modular_headers to fix Swift header issues
  pod 'Firebase/Core', :modular_headers => true
  pod 'Firebase/Auth', :modular_headers => true
  pod 'Firebase/Firestore', :modular_headers => true

  # Make sure FirebaseCore is explicitly included
  pod 'FirebaseCore', :modular_headers => true

  pod 'RNCPushNotificationIOS', :path => '../node_modules/@react-native-community/push-notification-ios'

  # Add this line to fix gRPC module map issues
  pod 'gRPC-Core', :modular_headers => true
  pod 'gRPC-C++', :modular_headers => true
  pod 'abseil', :modular_headers => true
  pod 'BoringSSL-GRPC', :modular_headers => true
  pod 'leveldb-library', :modular_headers => true

  target 'MyTribeTests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    # This is a simpler post-install hook that should work with your CocoaPods version
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
        
        # Add ARM64 to the excluded architectures for the simulator on Apple Silicon
        if config.name == 'Debug' && target.platform_name == :simulator
          config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
        end
      end
    end
    
    # Apply React Native specific post-install modifications
    react_native_post_install(installer)
    
    # Fix gRPC module map issue
    system('mkdir -p Pods/Headers/Private/grpc')
    system('echo "module gRPC_Core { umbrella header \"gRPC-Core-umbrella.h\" export * module * { export * } }" > Pods/Headers/Private/grpc/gRPC-Core.modulemap')
    
    # Fix gRPC module map issue
    installer.pods_project.targets.each do |target|
      if target.name == 'gRPC-Core' || target.name == 'gRPC-C++'
        target.build_configurations.each do |config|
          config.build_settings['CLANG_ENABLE_MODULES'] = 'NO'
          config.build_settings['CLANG_MODULES_DISABLE_PRIVATE_WARNING'] = 'YES'
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'GRPC_SHADOW_BORINGSSL_SYMBOLS=0'
        end
      end
    end
  end
end
